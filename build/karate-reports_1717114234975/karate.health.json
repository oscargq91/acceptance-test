[{"line":1,"elements":[{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"url api.healthCheckBaseUrl","result":{"duration":503300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4},{"name":"def registerPath = \"\/register\"","result":{"duration":373200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5},{"name":"def serviceHealthPath = \"\/health\"","result":{"duration":247400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"def deleteServicePath = \"\/delete\/apiRestTest\"","result":{"duration":204800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def responseSuccessfully = read(\"..\/database\/response_successfully.json\")","result":{"duration":14830700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def responseError = read(\"..\/database\/response_error.json\")","result":{"duration":5888800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def requestBody = read(\"..\/database\/body.json\")","result":{"duration":2560600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10}]},{"start_timestamp":"2024-05-31T00:10:05.061Z","line":13,"name":"Successfully add service to be monitored through health tests","description":"","id":"successfully-add-service-to-be-monitored-through-health-tests","type":"scenario","keyword":"Scenario","steps":[{"name":"path registerPath","result":{"duration":264200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":14},{"name":"request { name : \"apiRestTest\", endpoint: \"http:\/\/localhost:8090\/api\/v1\/actuator\/health\", status: \"active\",frequency: 500, notification_emails: [\"correo_ejemplo1@example.com\"] }","result":{"duration":97200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":15},{"name":"method Post","result":{"duration":132905800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":16,"doc_string":{"content_type":"","value":"19:10:05.195 request:\n1 > POST http:\/\/localhost:8050\/register\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 174\n1 > Host: localhost:8050\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n{\"name\":\"apiRestTest\",\"endpoint\":\"http:\\\/\\\/localhost:8090\\\/api\\\/v1\\\/actuator\\\/health\",\"status\":\"active\",\"frequency\":500,\"notification_emails\":[\"correo_ejemplo1@example.com\"]}\n\n19:10:05.222 response time in milliseconds: 25\n1 < 201\n1 < Server: Werkzeug\/3.0.2 Python\/3.9.19\n1 < Date: Fri, 31 May 2024 00:10:05 GMT\n1 < Content-Type: application\/json\n1 < Content-Length: 46\n1 < Connection: close\n{\"message\":\"Service registered successfully\"}\n\n\n","line":16}},{"name":"status 201","result":{"duration":17500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":17},{"name":"path deleteServicePath","result":{"duration":416600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":18},{"name":"method Delete","result":{"duration":7462600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":19,"doc_string":{"content_type":"","value":"19:10:05.225 request:\n2 > DELETE http:\/\/localhost:8050\/delete\/apiRestTest\n2 > Host: localhost:8050\n2 > Connection: Keep-Alive\n2 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n2 > Accept-Encoding: gzip,deflate\n\n\n19:10:05.231 response time in milliseconds: 6\n2 < 200\n2 < Server: Werkzeug\/3.0.2 Python\/3.9.19\n2 < Date: Fri, 31 May 2024 00:10:05 GMT\n2 < Content-Type: application\/json\n2 < Content-Length: 55\n2 < Connection: close\n{\"message\":\"Service apiRestTest deleted successfully\"}\n\n\n","line":19}},{"name":"status 200","result":{"duration":10300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":20}],"tags":[{"name":"@AddAndDeleteServiceSuccessfully","line":12}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"url api.healthCheckBaseUrl","result":{"duration":155900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4},{"name":"def registerPath = \"\/register\"","result":{"duration":171800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5},{"name":"def serviceHealthPath = \"\/health\"","result":{"duration":132000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"def deleteServicePath = \"\/delete\/apiRestTest\"","result":{"duration":104100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def responseSuccessfully = read(\"..\/database\/response_successfully.json\")","result":{"duration":526200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def responseError = read(\"..\/database\/response_error.json\")","result":{"duration":1207800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def requestBody = read(\"..\/database\/body.json\")","result":{"duration":1311400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10}]},{"start_timestamp":"2024-05-31T00:10:05.235Z","line":23,"name":"check the health status of a registered service that is working well","description":"","id":"check-the-health-status-of-a-registered-service-that-is-working-well","type":"scenario","keyword":"Scenario","steps":[{"name":"path serviceHealthPath + \"\/apiRest\"","result":{"duration":751700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":24},{"name":"method Get","result":{"duration":13973000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":25,"doc_string":{"content_type":"","value":"19:10:05.243 request:\n1 > GET http:\/\/localhost:8050\/health\/apiRest\n1 > Host: localhost:8050\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n\n\n19:10:05.255 response time in milliseconds: 12\n1 < 200\n1 < Server: Werkzeug\/3.0.2 Python\/3.9.19\n1 < Date: Fri, 31 May 2024 00:10:05 GMT\n1 < Content-Type: application\/json\n1 < Content-Length: 611\n1 < Connection: close\n{\"components\":{\"circuitBreakers\":{\"status\":\"UNKNOWN\"},\"diskSpace\":{\"details\":{\"exists\":true,\"free\":238876454912,\"path\":\"\/.\",\"threshold\":10485760,\"total\":269490393088},\"status\":\"UP\"},\"livenessState\":{\"details\":{\"from\":\"2024-05-30T23:47:58.947629059\",\"status\":\"ALIVE\",\"uptimeSeconds\":1329},\"status\":\"UP\"},\"mongo\":{\"details\":{\"maxWireVersion\":13},\"status\":\"UP\"},\"ping\":{\"status\":\"UP\"},\"rabbit\":{\"details\":{\"version\":\"3.11.11\"},\"status\":\"UP\"},\"readinessState\":{\"details\":{\"from\":\"2024-05-30T23:47:58.954951125\",\"status\":\"ALIVE\",\"uptimeSeconds\":1329},\"status\":\"UP\"}},\"groups\":[\"liveness\",\"readiness\"],\"status\":\"UP\"}\n\n\n","line":25}},{"name":"status 200","result":{"duration":8600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":26}],"tags":[{"name":"@CheckServicehealthSuccessfully","line":22}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"url api.healthCheckBaseUrl","result":{"duration":129400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4},{"name":"def registerPath = \"\/register\"","result":{"duration":121000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5},{"name":"def serviceHealthPath = \"\/health\"","result":{"duration":100200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"def deleteServicePath = \"\/delete\/apiRestTest\"","result":{"duration":465800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def responseSuccessfully = read(\"..\/database\/response_successfully.json\")","result":{"duration":603700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def responseError = read(\"..\/database\/response_error.json\")","result":{"duration":1574100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def requestBody = read(\"..\/database\/body.json\")","result":{"duration":1735700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10}]},{"start_timestamp":"2024-05-31T00:10:05.260Z","line":30,"name":"check the health status of a registered service that is failing","description":"","id":"check-the-health-status-of-a-registered-service-that-is-failing","type":"scenario","keyword":"Scenario","steps":[{"name":"path serviceHealthPath + \"\/apiRestError\"","result":{"duration":451600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":31},{"name":"method Get","result":{"duration":10013245000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":32,"doc_string":{"content_type":"","value":"19:10:05.268 request:\n1 > GET http:\/\/localhost:8050\/health\/apiRestError\n1 > Host: localhost:8050\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n\n\n19:10:15.280 response time in milliseconds: 10010\n1 < 503\n1 < Server: Werkzeug\/3.0.2 Python\/3.9.19\n1 < Date: Fri, 31 May 2024 00:10:15 GMT\n1 < Content-Type: application\/json\n1 < Content-Length: 318\n1 < Connection: close\n{\"message\":\"Error checking service health: HTTPConnectionPool(host='error', port=80): Max retries exceeded with url: \/api\/v1\/actuator\/health (Caused by NameResolutionError(\\\"<urllib3.connection.HTTPConnection object at 0x7f2024de9910>: Failed to resolve 'error' ([Errno -3] Temporary failure in name resolution)\\\"))\"}\n\n\n","line":32}},{"name":"status 503","result":{"duration":7400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":33}],"tags":[{"name":"@CheckServicehealthWithError","line":29}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"url api.healthCheckBaseUrl","result":{"duration":115200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4},{"name":"def registerPath = \"\/register\"","result":{"duration":113100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5},{"name":"def serviceHealthPath = \"\/health\"","result":{"duration":103000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"def deleteServicePath = \"\/delete\/apiRestTest\"","result":{"duration":80100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def responseSuccessfully = read(\"..\/database\/response_successfully.json\")","result":{"duration":538800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def responseError = read(\"..\/database\/response_error.json\")","result":{"duration":1081100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def requestBody = read(\"..\/database\/body.json\")","result":{"duration":1225500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10}]},{"start_timestamp":"2024-05-31T00:10:15.284Z","line":36,"name":"List all services that are being monitored","description":"","id":"list-all-services-that-are-being-monitored","type":"scenario","keyword":"Scenario","steps":[{"name":"path \"\/services\"","result":{"duration":285500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":37},{"name":"method Get","result":{"duration":11848900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":38,"doc_string":{"content_type":"","value":"19:10:15.290 request:\n1 > GET http:\/\/localhost:8050\/services\n1 > Host: localhost:8050\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.9)\n1 > Accept-Encoding: gzip,deflate\n\n\n19:10:15.296 response time in milliseconds: 5\n1 < 200\n1 < Server: Werkzeug\/3.0.2 Python\/3.9.19\n1 < Date: Fri, 31 May 2024 00:10:15 GMT\n1 < Content-Type: application\/json\n1 < Content-Length: 332\n1 < Connection: close\n[{\"endpoint\":\"http:\/\/api-rest:8090\/api\/v1\/actuator\/health\",\"frequency\":10,\"name\":\"apiRest\",\"notification_emails\":[\"correo_ejemplo1@example.com\"],\"status\":\"active\"},{\"endpoint\":\"http:\/\/error\/api\/v1\/actuator\/health\",\"frequency\":100000000,\"name\":\"apiRestError\",\"notification_emails\":[\"correo_ejemplo1@example.com\"],\"status\":\"active\"}]\n\n\n","line":38}},{"name":"status 200","result":{"duration":7900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":39}],"tags":[{"name":"@ListServicesSuccessfully","line":35}]}],"name":"karate\/health.feature","description":"Validate log management","id":"validate-log-management","keyword":"Feature","uri":"karate\/health.feature"}]