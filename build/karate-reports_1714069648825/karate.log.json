[{"line":1,"elements":[{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"url api.logBaseUrl","result":{"duration":1505200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4},{"name":"def createlogPath = \"\/log\"","result":{"duration":823301,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5},{"name":"def listLogPath = \"\/logs\"","result":{"duration":579400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"def responseSuccessfully = read(\"..\/database\/response_successfully.json\")","result":{"duration":42903800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def responseError = read(\"..\/database\/response_error.json\")","result":{"duration":12104500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def requestBody = read(\"..\/database\/body.json\")","result":{"duration":4196300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9}]},{"start_timestamp":"2024-04-25T18:27:04.479Z","line":14,"name":"Successfully add log","description":"","id":"successfully-add-log","type":"scenario","keyword":"Scenario","steps":[{"name":"path usersPath","result":{"duration":1443100,"error_message":"js failed:\n>>>>\n01: usersPath\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"usersPath\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:karate\/log.feature:15","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":15,"doc_string":{"content_type":"","value":"13:27:04.671 classpath:karate\/log.feature:15\nGiven path usersPath\njs failed:\n>>>>\n01: usersPath\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"usersPath\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:karate\/log.feature:15\n","line":15}},{"name":"request { application : \"acceptance-test\", type: \"INFO\", module: \"feature\",summary:\"Log prueba\", description: \"Log generado desde las pruebas de aceptacion para comprobar su correcto funcionamiento\" }","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":16},{"name":"method Post","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":17},{"name":"status 201","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":18},{"name":"match response contains responseSuccessfully.log","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":19}],"tags":[{"name":"@AddLogSuccessfully","line":13}]}],"name":"karate\/log.feature","description":"Validate log management","id":"validate-log-management","keyword":"Feature","uri":"karate\/log.feature"}]